{"version":3,"sources":["C:/Users/KS/chatop/src/$_gendir lazy","C:/Users/KS/chatop/src/app/app.component.html","C:/Users/KS/chatop/src/app/app.component.scss","C:/Users/KS/chatop/src/app/app.component.ts","C:/Users/KS/chatop/src/app/app.module.ts","C:/Users/KS/chatop/src/app/chat/chat-dialog/chat-dialog.component.html","C:/Users/KS/chatop/src/app/chat/chat-dialog/chat-dialog.component.scss","C:/Users/KS/chatop/src/app/chat/chat-dialog/chat-dialog.component.ts","C:/Users/KS/chatop/src/app/chat/chat.module.ts","C:/Users/KS/chatop/src/app/chat/chat.service.ts","C:/Users/KS/chatop/src/environments/environment.ts","C:/Users/KS/chatop/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_gendir lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KS/chatop/src/$$_gendir lazy\n// module id = ../../../../../src/$$_gendir lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\n        <div class=\\\"column\\\"></div>\\n        <div class=\\\"column column-50\\\">\\n            <chat-dialog></chat-dialog>\\n        </div>\\n        <div class=\\\"column\\\"></div>\\n      </div>\\n    \\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KS/chatop/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KS/chatop/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KS/chatop/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\nimport { ChatModule } from './chat/chat.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ChatModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KS/chatop/src/app/app.module.ts","module.exports = \"\\n\\n  <h1>ITSM-HelperBot</h1>\\n<h2>This is a voice activated chatbot</h2>\\n\\n\\n<body>\\n \\n\\n<ng-container *ngFor=\\\"let message of messages | async\\\">\\n\\n  <div class=\\\"message\\\" [ngClass]=\\\"{ 'from': message.sentBy === 'bot',\\n                                    'to':   message.sentBy === 'user' }\\\">\\n    {{ message.content }}\\n  </div>\\n\\n</ng-container>\\n\\n\\n<label for=\\\"nameField\\\">Questions</label>\\n\\n\\n<input [(ngModel)]=\\\"formValue\\\" (keyup.enter)=\\\"sendMessage()\\\" type=\\\"text\\\"><br>\\n\\n<button   (click)=\\\"sendMessage()\\\">Send</button>\\n\\n\\n\\n</body> \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KS/chatop/src/app/chat/chat-dialog/chat-dialog.component.html\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.html\n// module chunks = main","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".message {\\n  border-radius: 50px;\\n  margin: 0 15px 10px;\\n  padding: 15px 20px;\\n  position: relative;\\n  font-weight: bold; }\\n\\n.message.to {\\n  background-color: #003cac;\\n  color: #fff;\\n  margin-left: 100px;\\n  text-align: right; }\\n\\n.message.from {\\n  background-color: #E5E4E9;\\n  color: #363636;\\n  margin-right: 100px; }\\n\\n.message.to + .message.to,\\n.message.from + .message.from {\\n  margin-top: -10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/KS/chatop/src/app/chat/chat-dialog/chat-dialog.component.scss\n// module id = ../../../../../src/app/chat/chat-dialog/chat-dialog.component.scss\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { ChatService, Message } from '../chat.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/scan';\n\n\n@Component({\n  selector: 'chat-dialog',\n  templateUrl: './chat-dialog.component.html',\n  styleUrls: ['./chat-dialog.component.scss']\n})\nexport class ChatDialogComponent implements OnInit {\n\n  messages: Observable<Message[]>;\n  formValue: string;\n \n  \n  constructor(public chat: ChatService) { }\n\n  ngOnInit() {\n    // appends to array after each new message is added to feedSource\n    this.messages = this.chat.conversation.asObservable()\n        .scan((acc, val) => acc.concat(val) );\n  }\n\n  sendMessage() {\n\n    this.chat.converse(this.formValue)\n    this.formValue=\"\";  \n  \n  }\n \n}\n\n\n// WEBPACK FOOTER //\n// C:/Users/KS/chatop/src/app/chat/chat-dialog/chat-dialog.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ChatDialogComponent } from './chat-dialog/chat-dialog.component';\nimport { ChatService } from './chat.service';\n\nimport { FormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  declarations: [\n    ChatDialogComponent\n  ],\n  exports: [ ChatDialogComponent ],\n  providers: [ChatService]\n})\nexport class ChatModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KS/chatop/src/app/chat/chat.module.ts","import { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\nimport { ApiAiClient } from 'api-ai-javascript';\n\nimport { Observable } from 'rxjs/Observable';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Button } from 'selenium-webdriver';\n\nexport class Message {\n  constructor(public content: string, public sentBy: string) {}\n}\n\n@Injectable()\nexport class ChatService {\n\n  readonly token = environment.dialogflow.angularBot;\n  readonly client = new ApiAiClient({ accessToken: this.token });\n\n  conversation = new BehaviorSubject<Message[]>([]);\n\n  constructor() {}\n\n  // Sends and receives messages via DialogFlow\n  converse(msg: string) {\n    const userMessage = new Message(msg, 'user');\n \n    this.update(userMessage);\n    return this.client.textRequest(msg)\n            \n               .then(res => {\n                  const speech = res.result.fulfillment.speech;\n                  const botMessage = new Message(speech, 'bot');\n                  this.update(botMessage);\n                  this.speak(speech); \n               });\n  }\n\n\n\n  // Adds message to source\n  update(msg: Message) {\n   \n    this.conversation.next([msg])\n   \n  }\n  speak(string) {\n    var msgb = new SpeechSynthesisUtterance();\n\n    var voice = window.speechSynthesis.getVoices().filter(function(voice){return voice[1];})  \n    msgb.text = string;\n    msgb.lang = \"en-US\";\n    msgb.volume = 1; //0-1 interval\n    msgb.rate = 1;\n    msgb.pitch = 2; //0-2 interval\n    speechSynthesis.speak(msgb);\n    \n  }\n\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KS/chatop/src/app/chat/chat.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  dialogflow: {\n    angularBot: 'c57bb8b8876a49bcbbe63f0032ca4438'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KS/chatop/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/KS/chatop/src/main.ts"],"sourceRoot":"webpack:///"}